//TODO: figure out how to get the name of the running script
var autoHackScriptName = "autohack.script";
var farmManager = "home";
var numSleepTime = 10000;
var thresholdHackChance = 0.5;
var excludedFiles = [
	"autohack.script",
	"AutoLink.exe",
	"BruteSSH.exe",
	"DeepscanV1.exe",
	"farm.script",
	"farming.txt",
	"fl1ght.exe",
	"FTPCrack.exe",
	"hack_node.script",
	"manage_hacknet.script",
	"NUKE.exe",
	"ServerProfiler.exe",
	"superkill.script",
	"test.script",
	"trade_stocks.ns"
];

var access = [];

if (serverExists(args[0]) == false) {
	print ("WARNING no servers excluded from hacking")
}

function initAccess() {
	var nodes = scan(getHostname());

	for (var i = 0; i < nodes.length; i++) {
		if (args.includes(nodes[i]) == false) {
			access.push({
				name: nodes[i],
				rootAccess: false,
				filesDownloaded: false,
				fullyHacked: false,
				propagating: false
			});

			if (hasRootAccess(nodes[i])) {
				access[i].rootAccess = true;
			}
		}
	}
}

function hasHackedAllNodes() {
	var retVal = true;

	for (var i = 0; i < access.length; i++) {
		if (access[i].fullyHacked == false) {
			retVal = false;
			i = access.length;
		}
	}

	return retVal;
}

initAccess();

while (hasHackedAllNodes() == false) {
	for (var i = 0; i < access.length; i++) {
		if (access[i].fullyHacked == false) {
			if (serverExists(access[i].name)) {
				print("evaluating " + access[i].name + "...");

				if (hasRootAccess(access[i].name) == false) {
					print("	no root access to " + access[i].name);
				}

				print("	attempting to open ports...");

				if (getServer(access[i].name).sshPortOpen == false) {
					if (fileExists("BruteSSH.exe", "home")) {
						brutessh(access[i].name);
					}
				}

				if (getServer(access[i].name).ftpPortOpen == false) {
					if (fileExists("FTPCrack.exe", "home")) {
						ftpcrack(access[i].name);
					}
				}

				if (getServer(access[i].name).httpPortOpen == false) {
					if (fileExists("HTTPWorm.exe", "home")) {
						httpworm(access[i].name);
					}
				}

				if (getServer(access[i].name).smtpPortOpen == false) {
					if (fileExists("relaySMTP.exe", "home")) {
						relaysmtp(access[i].name);
					}
				}

				if (getServer(access[i].name).sqlPortOpen == false) {
					if (fileExists("SQLInject.exe", "home")) {
						sqlinject(access[i].name);
					}
				}

				if (hasRootAccess(access[i].name) == false) {
					print("	evaluating probability of successful hack...");

					if (getServer(access[i].name).openPortCount >= getServer(access[i].name).numOpenPortsRequired) {
						//if (hackAnalyzeChance(access[i].name) > thresholdHackChance) {
							nuke(access[i].name);
						//}
					}
				}

				if (hasRootAccess(access[i].name)) {
					if (access[i].rootAccess == false) {
						access[i].rootAccess = true;
					}

					//if (getServer(access[i].name).backdoorInstalled == false) {
					//	installBackdoor(access[i].name);
					//}

					if (access[i].filesDownloaded == false) {
						print("	searching for files...");
						var files = ls(access[i].name, ".script");
						files = files.concat(ls(access[i].name, ".lit"));
						files = files.concat(ls(access[i].name, ".txt"));

						for (var j = 0; j < files.length; j++) {
							if (fileExists(files[j], "home") == false) {
								if (excludedFiles.includes(files[j]) == false) {
									scp (files[j], access[i].name, "home");
								}
							}
						}

						access[i].filesDownloaded = true;
					}

					if (access[i].propagating == false) {
						if ((getServerMaxRam(access[i].name) - getServerUsedRam(access[i].name)) > getScriptRam(autoHackScriptName)) {
							scp(autoHackScriptName, access[i].name);
							//exec(autoHackScriptName, access[i].name, 1, [getHostname()].concat(args));
							//the above does not work because the function invocation cannot take an array
							//and the spread operator does not work, at least in NS1
							exec(autoHackScriptName, access[i].name, 1, getHostname());
							access[i].propagating = true;
						}
					}
				}

				if ((getServer(access[i].name).sshPortOpen == true)
					&& (getServer(access[i].name).ftpPortOpen == true)
					&& (getServer(access[i].name).httpPortOpen == true)
					&& (getServer(access[i].name).smtpPortOpen == true)
					&& (getServer(access[i].name).sqlPortOpen == true)
					&& ((getServer(access[i].name).backdoorInstalled == true))
					&& (access[i].rootAccess == true)
					&& (access[i].filesDownloaded == true)
					&& (access[i].propagating == true)
				) {
					access[i].fullyHacked = true;
				}
			}
		}
	}

	sleep(numSleepTime);
}

exit;